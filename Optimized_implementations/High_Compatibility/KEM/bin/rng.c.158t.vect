
;; Function AES256_CTR_DRBG_Update.constprop (AES256_CTR_DRBG_Update.constprop.1, funcdef_no=52, decl_uid=3367, cgraph_uid=3, symbol_order=83)

AES256_CTR_DRBG_Update.constprop (unsigned char * Key, unsigned char * V)
{
  uint32_t round_key[60];
  unsigned char temp[48];
  int i;
  int j;
  unsigned char _8;
  int _11;
  sizetype _12;
  unsigned char * _13;
  unsigned char _17;
  unsigned char * _22;
  unsigned char * _24;
  __int128 unsigned _25;
  unsigned char _37;
  unsigned char * _46;
  unsigned char _47;
  unsigned char * _53;
  unsigned char _54;
  unsigned char * _60;
  unsigned char _61;
  unsigned char * _67;
  unsigned char _68;
  unsigned char * _74;
  unsigned char _75;
  unsigned char * _81;
  unsigned char _82;
  unsigned char * _88;
  unsigned char _89;
  unsigned char * _95;
  unsigned char _96;
  unsigned char * _102;
  unsigned char _103;
  unsigned char * _109;
  unsigned char _110;
  unsigned char * _116;
  unsigned char _117;
  unsigned char * _123;
  unsigned char _124;
  unsigned char * _130;
  unsigned char _131;
  unsigned int ivtmp_136;
  unsigned char _138;
  unsigned int ivtmp_140;
  unsigned char * _141;
  unsigned char _142;

  <bb 2> [4.31%]:
  _24 = V_3(D) + 15;
  goto <bb 6>; [100.00%]

  <bb 3> [7.06%]:
  # _141 = PHI <V_3(D)(35), _24(6), _22(8), _46(10), _53(12), _60(14), _67(16), _74(18), _81(20), _88(22), _95(24), _102(26), _109(28), _116(30), _123(32), _130(34)>
  # _142 = PHI <_138(35), _17(6), _37(8), _47(10), _54(12), _61(14), _68(16), _75(18), _82(20), _89(22), _96(24), _103(26), _110(28), _117(30), _124(32), _131(34)>
  _8 = _142 + 1;
  *_141 = _8;

  <bb 4> [12.94%]:
  _11 = i_108 * 16;
  _12 = (sizetype) _11;
  _13 = &temp + _12;
  rijndaelKeySetupEnc (&round_key, Key_14(D), 256);
  rijndaelEncrypt (&round_key, 14, V_3(D), _13);
  round_key ={v} {CLOBBER};
  i_15 = i_108 + 1;
  ivtmp_136 = ivtmp_140 - 1;
  if (ivtmp_136 != 0)
    goto <bb 5>; [66.67%]
  else
    goto <bb 37>; [33.33%]

  <bb 5> [8.63%]:

  <bb 6> [12.94%]:
  # i_108 = PHI <i_15(5), 0(2)>
  # ivtmp_140 = PHI <ivtmp_136(5), 3(2)>
  _17 = MEM[(unsigned char *)V_3(D) + 15B];
  if (_17 == 255)
    goto <bb 7>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 7> [12.00%]:
  MEM[(unsigned char *)V_3(D) + 15B] = 0;
  _37 = MEM[(unsigned char *)V_3(D) + 14B];
  if (_37 == 255)
    goto <bb 9>; [92.50%]
  else
    goto <bb 8>; [7.50%]

  <bb 8> [0.90%]:
  _22 = V_3(D) + 14;
  goto <bb 3>; [100.00%]

  <bb 9> [11.20%]:
  MEM[(unsigned char *)V_3(D) + 14B] = 0;
  _47 = MEM[(unsigned char *)V_3(D) + 13B];
  if (_47 == 255)
    goto <bb 11>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 10> [0.84%]:
  _46 = V_3(D) + 13;
  goto <bb 3>; [100.00%]

  <bb 11> [10.40%]:
  MEM[(unsigned char *)V_3(D) + 13B] = 0;
  _54 = MEM[(unsigned char *)V_3(D) + 12B];
  if (_54 == 255)
    goto <bb 13>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 12> [0.78%]:
  _53 = V_3(D) + 12;
  goto <bb 3>; [100.00%]

  <bb 13> [9.70%]:
  MEM[(unsigned char *)V_3(D) + 12B] = 0;
  _61 = MEM[(unsigned char *)V_3(D) + 11B];
  if (_61 == 255)
    goto <bb 15>; [92.50%]
  else
    goto <bb 14>; [7.50%]

  <bb 14> [0.73%]:
  _60 = V_3(D) + 11;
  goto <bb 3>; [100.00%]

  <bb 15> [9.00%]:
  MEM[(unsigned char *)V_3(D) + 11B] = 0;
  _68 = MEM[(unsigned char *)V_3(D) + 10B];
  if (_68 == 255)
    goto <bb 17>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 16> [0.68%]:
  _67 = V_3(D) + 10;
  goto <bb 3>; [100.00%]

  <bb 17> [8.40%]:
  MEM[(unsigned char *)V_3(D) + 10B] = 0;
  _75 = MEM[(unsigned char *)V_3(D) + 9B];
  if (_75 == 255)
    goto <bb 19>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 18> [0.63%]:
  _74 = V_3(D) + 9;
  goto <bb 3>; [100.00%]

  <bb 19> [7.80%]:
  MEM[(unsigned char *)V_3(D) + 9B] = 0;
  _82 = MEM[(unsigned char *)V_3(D) + 8B];
  if (_82 == 255)
    goto <bb 21>; [92.50%]
  else
    goto <bb 20>; [7.50%]

  <bb 20> [0.59%]:
  _81 = V_3(D) + 8;
  goto <bb 3>; [100.00%]

  <bb 21> [7.22%]:
  MEM[(unsigned char *)V_3(D) + 8B] = 0;
  _89 = MEM[(unsigned char *)V_3(D) + 7B];
  if (_89 == 255)
    goto <bb 23>; [92.50%]
  else
    goto <bb 22>; [7.50%]

  <bb 22> [0.54%]:
  _88 = V_3(D) + 7;
  goto <bb 3>; [100.00%]

  <bb 23> [6.70%]:
  MEM[(unsigned char *)V_3(D) + 7B] = 0;
  _96 = MEM[(unsigned char *)V_3(D) + 6B];
  if (_96 == 255)
    goto <bb 25>; [92.50%]
  else
    goto <bb 24>; [7.50%]

  <bb 24> [0.50%]:
  _95 = V_3(D) + 6;
  goto <bb 3>; [100.00%]

  <bb 25> [6.20%]:
  MEM[(unsigned char *)V_3(D) + 6B] = 0;
  _103 = MEM[(unsigned char *)V_3(D) + 5B];
  if (_103 == 255)
    goto <bb 27>; [92.50%]
  else
    goto <bb 26>; [7.50%]

  <bb 26> [0.47%]:
  _102 = V_3(D) + 5;
  goto <bb 3>; [100.00%]

  <bb 27> [5.80%]:
  MEM[(unsigned char *)V_3(D) + 5B] = 0;
  _110 = MEM[(unsigned char *)V_3(D) + 4B];
  if (_110 == 255)
    goto <bb 29>; [92.50%]
  else
    goto <bb 28>; [7.50%]

  <bb 28> [0.44%]:
  _109 = V_3(D) + 4;
  goto <bb 3>; [100.00%]

  <bb 29> [5.40%]:
  MEM[(unsigned char *)V_3(D) + 4B] = 0;
  _117 = MEM[(unsigned char *)V_3(D) + 3B];
  if (_117 == 255)
    goto <bb 31>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 30> [0.41%]:
  _116 = V_3(D) + 3;
  goto <bb 3>; [100.00%]

  <bb 31> [5.00%]:
  MEM[(unsigned char *)V_3(D) + 3B] = 0;
  _124 = MEM[(unsigned char *)V_3(D) + 2B];
  if (_124 == 255)
    goto <bb 33>; [92.50%]
  else
    goto <bb 32>; [7.50%]

  <bb 32> [0.38%]:
  _123 = V_3(D) + 2;
  goto <bb 3>; [100.00%]

  <bb 33> [4.70%]:
  MEM[(unsigned char *)V_3(D) + 2B] = 0;
  _131 = MEM[(unsigned char *)V_3(D) + 1B];
  if (_131 == 255)
    goto <bb 35>; [92.50%]
  else
    goto <bb 34>; [7.50%]

  <bb 34> [0.35%]:
  _130 = V_3(D) + 1;
  goto <bb 3>; [100.00%]

  <bb 35> [4.35%]:
  MEM[(unsigned char *)V_3(D) + 1B] = 0;
  _138 = *V_3(D);
  if (_138 == 255)
    goto <bb 36>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 36> [4.00%]:
  *V_3(D) = 0;
  goto <bb 4>; [100.00%]

  <bb 37> [4.31%]:
  __builtin_memcpy (Key_14(D), &temp, 32);
  _25 = MEM[(char * {ref-all})&temp + 32B];
  MEM[(char * {ref-all})V_3(D)] = _25;
  temp ={v} {CLOBBER};
  return;

}



;; Function initialize_pseudo_random_generator_seed (initialize_pseudo_random_generator_seed, funcdef_no=42, decl_uid=2444, cgraph_uid=42, symbol_order=43)

Removing basic block 33
Removing basic block 29
initialize_pseudo_random_generator_seed (int ac, char * * av)
{
  vector(32) unsigned char * vectp_temp.34;
  vector(32) unsigned char * vectp_temp.33;
  vector(32) unsigned char vect__50.32;
  vector(32) unsigned char vect__49.31;
  vector(32) unsigned char * vectp_seed_material.30;
  vector(32) unsigned char * vectp_seed_material.29;
  vector(32) unsigned char vect__46.28;
  vector(32) unsigned char * vectp_temp.27;
  vector(32) unsigned char * vectp_temp.26;
  unsigned int tmp.25;
  int tmp.24;
  uint32_t round_key[60];
  unsigned char temp[48];
  int i;
  int j;
  int i;
  unsigned char seed_material[48];
  int i;
  struct timespec seedValue;
  unsigned char pseudo_entropy[48];
  char * _2;
  unsigned int _3;
  long int _4;
  unsigned int _5;
  int _6;
  unsigned char _7;
  long int _23;
  __int128 unsigned _25;
  unsigned char _38;
  unsigned char * _39;
  int _41;
  sizetype _42;
  unsigned char * _43;
  unsigned int ivtmp_45;
  unsigned char _46;
  sizetype _47;
  unsigned char * _48;
  unsigned char _49;
  unsigned char _50;
  unsigned int ivtmp_52;
  unsigned int ivtmp_54;
  unsigned char prephitmp_56;
  unsigned char pretmp_57;
  unsigned char _72;
  unsigned char _79;
  unsigned char _86;
  unsigned char _90;
  unsigned char _93;
  unsigned char _97;
  unsigned char _100;
  unsigned char * _104;
  unsigned char _107;
  sizetype _111;
  unsigned char _114;
  unsigned char _118;
  unsigned char _121;
  unsigned int ivtmp_125;
  unsigned char _128;
  unsigned char _135;
  unsigned char _142;
  unsigned char _149;
  unsigned int ivtmp_153;
  unsigned char _156;
  unsigned int ivtmp_162;
  unsigned char _163;
  unsigned int ivtmp_166;
  unsigned int ivtmp_168;
  unsigned int ivtmp_169;
  unsigned char _170;
  unsigned int ivtmp_172;
  unsigned char _173;

  <bb 2> [2.04%]:
  if (ac_11(D) == 2)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [0.69%]:
  _2 = MEM[(char * *)av_16(D) + 8B];
  _23 = strtol (_2, 0B, 10);
  _3 = (unsigned int) _23;
  srand (_3);
  goto <bb 5>; [100.00%]

  <bb 4> [1.35%]:
  clock_gettime (0, &seedValue);
  _4 = seedValue.tv_nsec;
  _5 = (unsigned int) _4;
  srand (_5);
  seedValue ={v} {CLOBBER};

  <bb 5> [2.04%]:

  <bb 6> [97.96%]:
  # i_165 = PHI <0(5), i_22(7)>
  # ivtmp_162 = PHI <48(5), ivtmp_153(7)>
  _6 = rand ();
  _7 = (unsigned char) _6;
  pseudo_entropy[i_165] = _7;
  i_22 = i_165 + 1;
  ivtmp_153 = ivtmp_162 - 1;
  if (ivtmp_153 != 0)
    goto <bb 7>; [97.92%]
  else
    goto <bb 8>; [2.08%]

  <bb 7> [95.92%]:
  goto <bb 6>; [100.00%]

  <bb 8> [2.04%]:
  MEM[(char * {ref-all})&seed_material] = MEM[(char * {ref-all})&pseudo_entropy];
  __builtin_memset (&DRBG_ctx.Key, 0, 32);
  __builtin_memset (&DRBG_ctx.V, 0, 16);
  goto <bb 12>; [100.00%]

  <bb 9> [3.34%]:
  # _39 = PHI <&DRBG_ctx.V(27), &MEM[(void *)&DRBG_ctx + 47B](12), &MEM[(void *)&DRBG_ctx + 46B](13), &MEM[(void *)&DRBG_ctx + 45B](14), &MEM[(void *)&DRBG_ctx + 44B](15), &MEM[(void *)&DRBG_ctx + 43B](16), &MEM[(void *)&DRBG_ctx + 42B](17), &MEM[(void *)&DRBG_ctx + 41B](18), &MEM[(void *)&DRBG_ctx + 40B](19), &MEM[(void *)&DRBG_ctx + 39B](20), &MEM[(void *)&DRBG_ctx + 38B](21), &MEM[(void *)&DRBG_ctx + 37B](22), &MEM[(void *)&DRBG_ctx + 36B](23), &MEM[(void *)&DRBG_ctx + 35B](24), &MEM[(void *)&DRBG_ctx + 34B](25), &MEM[(void *)&DRBG_ctx + 33B](26)>
  # _173 = PHI <_170(27), prephitmp_56(12), _72(13), _79(14), _86(15), _93(16), _100(17), _107(18), _114(19), _121(20), _128(21), _135(22), _142(23), _149(24), _156(25), _163(26)>
  _38 = _173 + 1;
  *_39 = _38;

  <bb 10> [6.12%]:
  _41 = i_159 * 16;
  _42 = (sizetype) _41;
  _43 = &temp + _42;
  rijndaelKeySetupEnc (&round_key, &DRBG_ctx.Key, 256);
  rijndaelEncrypt (&round_key, 14, &DRBG_ctx.V, _43);
  round_key ={v} {CLOBBER};
  i_44 = i_159 + 1;
  ivtmp_166 = ivtmp_168 - 1;
  if (ivtmp_166 != 0)
    goto <bb 11>; [66.67%]
  else
    goto <bb 29>; [33.33%]

  <bb 11> [4.08%]:
  pretmp_57 = MEM[(unsigned char *)&DRBG_ctx + 47B];

  <bb 12> [6.12%]:
  # i_159 = PHI <i_44(11), 0(8)>
  # prephitmp_56 = PHI <pretmp_57(11), 0(8)>
  # ivtmp_168 = PHI <ivtmp_166(11), 3(8)>
  if (prephitmp_56 == 255)
    goto <bb 13>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 13> [5.68%]:
  MEM[(unsigned char *)&DRBG_ctx + 47B] = 0;
  _72 = MEM[(unsigned char *)&DRBG_ctx + 46B];
  if (_72 == 255)
    goto <bb 14>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 14> [5.30%]:
  MEM[(unsigned char *)&DRBG_ctx + 46B] = 0;
  _79 = MEM[(unsigned char *)&DRBG_ctx + 45B];
  if (_79 == 255)
    goto <bb 15>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 15> [4.92%]:
  MEM[(unsigned char *)&DRBG_ctx + 45B] = 0;
  _86 = MEM[(unsigned char *)&DRBG_ctx + 44B];
  if (_86 == 255)
    goto <bb 16>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 16> [4.59%]:
  MEM[(unsigned char *)&DRBG_ctx + 44B] = 0;
  _93 = MEM[(unsigned char *)&DRBG_ctx + 43B];
  if (_93 == 255)
    goto <bb 17>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 17> [4.26%]:
  MEM[(unsigned char *)&DRBG_ctx + 43B] = 0;
  _100 = MEM[(unsigned char *)&DRBG_ctx + 42B];
  if (_100 == 255)
    goto <bb 18>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 18> [3.97%]:
  MEM[(unsigned char *)&DRBG_ctx + 42B] = 0;
  _107 = MEM[(unsigned char *)&DRBG_ctx + 41B];
  if (_107 == 255)
    goto <bb 19>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 19> [3.69%]:
  MEM[(unsigned char *)&DRBG_ctx + 41B] = 0;
  _114 = MEM[(unsigned char *)&DRBG_ctx + 40B];
  if (_114 == 255)
    goto <bb 20>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 20> [3.41%]:
  MEM[(unsigned char *)&DRBG_ctx + 40B] = 0;
  _121 = MEM[(unsigned char *)&DRBG_ctx + 39B];
  if (_121 == 255)
    goto <bb 21>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 21> [3.17%]:
  MEM[(unsigned char *)&DRBG_ctx + 39B] = 0;
  _128 = MEM[(unsigned char *)&DRBG_ctx + 38B];
  if (_128 == 255)
    goto <bb 22>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 22> [2.93%]:
  MEM[(unsigned char *)&DRBG_ctx + 38B] = 0;
  _135 = MEM[(unsigned char *)&DRBG_ctx + 37B];
  if (_135 == 255)
    goto <bb 23>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 23> [2.74%]:
  MEM[(unsigned char *)&DRBG_ctx + 37B] = 0;
  _142 = MEM[(unsigned char *)&DRBG_ctx + 36B];
  if (_142 == 255)
    goto <bb 24>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 24> [2.56%]:
  MEM[(unsigned char *)&DRBG_ctx + 36B] = 0;
  _149 = MEM[(unsigned char *)&DRBG_ctx + 35B];
  if (_149 == 255)
    goto <bb 25>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 25> [2.37%]:
  MEM[(unsigned char *)&DRBG_ctx + 35B] = 0;
  _156 = MEM[(unsigned char *)&DRBG_ctx + 34B];
  if (_156 == 255)
    goto <bb 26>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 26> [2.22%]:
  MEM[(unsigned char *)&DRBG_ctx + 34B] = 0;
  _163 = MEM[(unsigned char *)&DRBG_ctx + 33B];
  if (_163 == 255)
    goto <bb 27>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 27> [2.06%]:
  MEM[(unsigned char *)&DRBG_ctx + 33B] = 0;
  _170 = MEM[(unsigned char *)&DRBG_ctx + 32B];
  if (_170 == 255)
    goto <bb 28>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 28> [1.89%]:
  MEM[(unsigned char *)&DRBG_ctx + 32B] = 0;
  goto <bb 10>; [100.00%]

  <bb 29> [2.04%]:

  <bb 30> [12.25%]:
  # i_158 = PHI <i_51(31), 0(29)>
  # ivtmp_172 = PHI <ivtmp_169(31), 48(29)>
  # vectp_temp.26_37 = PHI <vectp_temp.26_35(31), &temp(29)>
  # vectp_seed_material.29_32 = PHI <vectp_seed_material.29_30(31), &seed_material(29)>
  # vectp_temp.33_160 = PHI <vectp_temp.33_99(31), &temp(29)>
  # ivtmp_54 = PHI <ivtmp_52(31), 0(29)>
  vect__46.28_34 = MEM[(unsigned char[48] *)vectp_temp.26_37];
  _46 = temp[i_158];
  _47 = (sizetype) i_158;
  _48 = &seed_material + _47;
  vect__49.31_8 = MEM[(unsigned char *)vectp_seed_material.29_32];
  _49 = *_48;
  vect__50.32_167 = vect__46.28_34 ^ vect__49.31_8;
  _50 = _46 ^ _49;
  MEM[(unsigned char[48] *)vectp_temp.33_160] = vect__50.32_167;
  i_51 = i_158 + 1;
  ivtmp_169 = ivtmp_172 - 1;
  vectp_temp.26_35 = vectp_temp.26_37 + 32;
  vectp_seed_material.29_30 = vectp_seed_material.29_32 + 32;
  vectp_temp.33_99 = vectp_temp.33_160 + 32;
  ivtmp_52 = ivtmp_54 + 1;
  if (ivtmp_52 < 1)
    goto <bb 31>; [83.34%]
  else
    goto <bb 32>; [16.66%]

  <bb 31> [10.20%]:
  goto <bb 30>; [100.00%]

  <bb 32> [2.04%]:

  <bb 33> [97.96%]:
  # i_139 = PHI <32(32), i_76(34)>
  # ivtmp_125 = PHI <16(32), ivtmp_45(34)>
  _118 = temp[i_139];
  _111 = (sizetype) i_139;
  _104 = &seed_material + _111;
  _97 = *_104;
  _90 = _118 ^ _97;
  temp[i_139] = _90;
  i_76 = i_139 + 1;
  ivtmp_45 = ivtmp_125 - 1;
  if (ivtmp_45 != 0)
    goto <bb 34>; [97.92%]
  else
    goto <bb 35>; [2.08%]

  <bb 34> [95.92%]:
  goto <bb 33>; [100.00%]

  <bb 35> [2.04%]:
  MEM[(char * {ref-all})&DRBG_ctx] = MEM[(char * {ref-all})&temp];
  _25 = MEM[(char * {ref-all})&temp + 32B];
  MEM[(char * {ref-all})&DRBG_ctx + 32B] = _25;
  temp ={v} {CLOBBER};
  DRBG_ctx.reseed_counter = 1;
  seed_material ={v} {CLOBBER};
  pseudo_entropy ={v} {CLOBBER};
  return;

}



;; Function seedexpander (seedexpander, funcdef_no=44, decl_uid=2434, cgraph_uid=44, symbol_order=46)

seedexpander (struct AES_XOF_struct * ctx, unsigned char * x, long unsigned int xlen)
{
  uint32_t round_key[60];
  int i;
  long unsigned int offset;
  long unsigned int _1;
  long unsigned int _3;
  int _11;
  unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  int _15;
  unsigned char _18;
  sizetype _21;
  const void * _22;
  unsigned char * _23;
  int _24;
  int _25;
  long unsigned int _26;
  unsigned char _32;
  int _36;
  long unsigned int _51;
  int _53;
  int _54;
  unsigned char[16] * pretmp_61;
  unsigned char _62;
  unsigned char _67;
  unsigned char[32] * pretmp_71;
  unsigned char _72;
  unsigned char _75;
  int _77;
  long unsigned int _78;
  unsigned char[16] * prephitmp_79;
  unsigned char * _80;
  unsigned char * prephitmp_83;
  unsigned char[16] * pretmp_86;
  sizetype _87;
  unsigned char[16] * prephitmp_90;
  unsigned char[16] * _91;

  <bb 2> [4.52%]:
  if (x_40(D) == 0B)
    goto <bb 20>; [0.87%]
  else
    goto <bb 3>; [99.13%]

  <bb 3> [4.48%]:
  _1 = ctx_42(D)->length_remaining;
  if (_1 <= xlen_43(D))
    goto <bb 20>; [2.00%]
  else
    goto <bb 4>; [98.00%]

  <bb 4> [4.39%]:
  _3 = _1 - xlen_43(D);
  ctx_42(D)->length_remaining = _3;
  if (xlen_43(D) != 0)
    goto <bb 6>; [92.50%]
  else
    goto <bb 5>; [7.50%]

  <bb 5> [2.30%]:
  goto <bb 20>; [100.00%]

  <bb 6> [4.05%]:
  _53 = ctx_42(D)->buffer_pos;
  _54 = 16 - _53;
  _51 = (long unsigned int) _54;
  pretmp_86 = &ctx_42(D)->buffer;
  if (xlen_43(D) <= _51)
    goto <bb 10>; [7.50%]
  else
    goto <bb 12>; [92.50%]

  <bb 7> [24.06%]:
  if (xlen_45 <= 16)
    goto <bb 9>; [7.50%]
  else
    goto <bb 8>; [92.50%]

  <bb 8> [22.26%]:
  goto <bb 13>; [100.00%]

  <bb 9> [1.80%]:
  # xlen_65 = PHI <xlen_45(7)>
  # offset_50 = PHI <offset_46(7)>
  # prephitmp_79 = PHI <pretmp_86(7)>
  _80 = x_40(D) + offset_50;
  goto <bb 11>; [100.00%]

  <bb 10> [0.30%]:
  _87 = (sizetype) _53;
  _91 = pretmp_86 + _87;

  <bb 11> [2.11%]:
  # xlen_27 = PHI <xlen_65(9), xlen_43(D)(10)>
  # prephitmp_83 = PHI <_80(9), x_40(D)(10)>
  # prephitmp_90 = PHI <prephitmp_79(9), _91(10)>
  __builtin_memcpy (prephitmp_83, prephitmp_90, xlen_27);
  _11 = ctx_42(D)->buffer_pos;
  _12 = (unsigned int) _11;
  _13 = (unsigned int) xlen_27;
  _14 = _12 + _13;
  _15 = (int) _14;
  ctx_42(D)->buffer_pos = _15;
  goto <bb 20>; [100.00%]

  <bb 12> [3.75%]:
  pretmp_61 = &ctx_42(D)->ctr;
  pretmp_71 = &ctx_42(D)->key;

  <bb 13> [26.00%]:
  # _77 = PHI <0(8), _53(12)>
  # _78 = PHI <16(8), _51(12)>
  # xlen_20 = PHI <xlen_45(8), xlen_43(D)(12)>
  # offset_64 = PHI <offset_46(8), 0(12)>
  _21 = (sizetype) _77;
  _22 = pretmp_86 + _21;
  _23 = x_40(D) + offset_64;
  __builtin_memcpy (_23, _22, _78);
  _24 = ctx_42(D)->buffer_pos;
  _25 = 16 - _24;
  _26 = (long unsigned int) _25;
  xlen_45 = xlen_20 - _26;
  offset_46 = _26 + offset_64;
  rijndaelKeySetupEnc (&round_key, pretmp_71, 256);
  rijndaelEncrypt (&round_key, 14, pretmp_61, pretmp_86);
  round_key ={v} {CLOBBER};
  ctx_42(D)->buffer_pos = 0;
  _18 = ctx_42(D)->ctr[15];
  if (_18 == 255)
    goto <bb 14>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 14> [24.40%]:
  ctx_42(D)->ctr[15] = 0;
  _62 = ctx_42(D)->ctr[14];
  if (_62 == 255)
    goto <bb 15>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 15> [23.00%]:
  ctx_42(D)->ctr[14] = 0;
  _67 = ctx_42(D)->ctr[13];
  if (_67 == 255)
    goto <bb 16>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 16> [21.60%]:
  ctx_42(D)->ctr[13] = 0;
  _72 = ctx_42(D)->ctr[12];
  if (_72 == 255)
    goto <bb 17>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 17> [20.30%]:
  ctx_42(D)->ctr[12] = 0;
  goto <bb 19>; [100.00%]

  <bb 18> [6.00%]:
  # i_28 = PHI <12(16), 15(13), 14(14), 13(15)>
  # _75 = PHI <_72(16), _18(13), _62(14), _67(15)>
  _32 = _75 + 1;
  ctx_42(D)->ctr[i_28] = _32;

  <bb 19> [26.30%]:
  if (xlen_45 != 0)
    goto <bb 7>; [92.50%]
  else
    goto <bb 5>; [7.50%]

  <bb 20> [4.52%]:
  # _36 = PHI <-2(2), -3(3), 0(11), 0(5)>
  return _36;

}



;; Function randombytes_init (randombytes_init, funcdef_no=46, decl_uid=2438, cgraph_uid=46, symbol_order=48)

Removing basic block 31
Removing basic block 37
Removing basic block 3
Removing basic block 27
randombytes_init (unsigned char * entropy_input, unsigned char * personalization_string, int security_strength)
{
  vector(32) unsigned char * vectp_seed_material.85;
  vector(32) unsigned char * vectp_seed_material.84;
  vector(32) unsigned char vect__5.83;
  vector(32) unsigned char vect__4.82;
  vector(32) unsigned char * vectp_personalization_string.81;
  vector(32) unsigned char * vectp_personalization_string.80;
  vector(32) unsigned char vect__1.79;
  vector(32) unsigned char * vectp_seed_material.78;
  vector(32) unsigned char * vectp_seed_material.77;
  unsigned int tmp.76;
  int tmp.75;
  vector(32) unsigned char * vectp_temp.74;
  vector(32) unsigned char * vectp_temp.73;
  vector(32) unsigned char vect__38.72;
  vector(32) unsigned char vect__37.71;
  vector(32) unsigned char * vectp_seed_material.70;
  vector(32) unsigned char * vectp_seed_material.69;
  vector(32) unsigned char vect__34.68;
  vector(32) unsigned char * vectp_temp.67;
  vector(32) unsigned char * vectp_temp.66;
  unsigned int tmp.65;
  int tmp.64;
  uint32_t round_key[60];
  unsigned char temp[48];
  int i;
  int j;
  int i;
  int i;
  unsigned char seed_material[48];
  unsigned char _1;
  sizetype _2;
  unsigned char * _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  __int128 unsigned _14;
  unsigned int ivtmp_24;
  unsigned char _26;
  unsigned char * _27;
  unsigned int ivtmp_28;
  int _29;
  sizetype _30;
  unsigned char * _31;
  unsigned char _34;
  sizetype _35;
  unsigned char * _36;
  unsigned char _37;
  unsigned char _38;
  unsigned char _63;
  unsigned int ivtmp_69;
  unsigned char _70;
  unsigned char _77;
  unsigned char _84;
  unsigned char _91;
  unsigned char _95;
  unsigned char _97;
  unsigned char _98;
  unsigned char * _102;
  unsigned int ivtmp_104;
  unsigned char _105;
  sizetype _109;
  unsigned char _112;
  unsigned char pretmp_116;
  unsigned char _119;
  unsigned int ivtmp_122;
  unsigned char prephitmp_123;
  unsigned int ivtmp_124;
  unsigned char _125;
  unsigned char _126;
  unsigned char _130;
  unsigned char * _132;
  unsigned char _133;
  sizetype _137;
  unsigned char _139;
  unsigned char _140;
  unsigned int ivtmp_144;
  unsigned char _147;
  unsigned char _154;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned char _161;
  unsigned int ivtmp_163;
  unsigned char _164;

  <bb 2> [2.04%]:
  MEM[(char * {ref-all})&seed_material] = MEM[(char * {ref-all})entropy_input_10(D)];
  if (personalization_string_11(D) != 0B)
    goto <bb 3>; [73.26%]
  else
    goto <bb 10>; [26.74%]

  <bb 3> [1.49%]:

  <bb 4> [8.97%]:
  # i_156 = PHI <i_13(5), 0(3)>
  # ivtmp_158 = PHI <ivtmp_157(5), 48(3)>
  # vectp_seed_material.77_60 = PHI <vectp_seed_material.77_22(5), &seed_material(3)>
  # vectp_personalization_string.80_142 = PHI <vectp_personalization_string.80_138(5), personalization_string_11(D)(3)>
  # vectp_seed_material.84_131 = PHI <vectp_seed_material.84_129(5), &seed_material(3)>
  # ivtmp_124 = PHI <ivtmp_122(5), 0(3)>
  vect__1.79_56 = MEM[(unsigned char[48] *)vectp_seed_material.77_60];
  _1 = seed_material[i_156];
  _2 = (sizetype) i_156;
  _3 = personalization_string_11(D) + _2;
  vect__4.82_136 = MEM[(unsigned char *)vectp_personalization_string.80_142];
  _4 = *_3;
  vect__5.83_135 = vect__1.79_56 ^ vect__4.82_136;
  _5 = _1 ^ _4;
  MEM[(unsigned char[48] *)vectp_seed_material.84_131] = vect__5.83_135;
  i_13 = i_156 + 1;
  ivtmp_157 = ivtmp_158 - 1;
  vectp_seed_material.77_22 = vectp_seed_material.77_60 + 32;
  vectp_personalization_string.80_138 = vectp_personalization_string.80_142 + 32;
  vectp_seed_material.84_129 = vectp_seed_material.84_131 + 32;
  ivtmp_122 = ivtmp_124 + 1;
  if (ivtmp_122 < 1)
    goto <bb 5>; [83.34%]
  else
    goto <bb 6>; [16.66%]

  <bb 5> [7.48%]:
  goto <bb 4>; [100.00%]

  <bb 6> [1.49%]:

  <bb 7> [71.77%]:
  # i_21 = PHI <32(6), i_88(8)>
  # ivtmp_7 = PHI <16(6), ivtmp_69(8)>
  _6 = seed_material[i_21];
  _109 = (sizetype) i_21;
  _102 = personalization_string_11(D) + _109;
  _97 = *_102;
  _95 = _6 ^ _97;
  seed_material[i_21] = _95;
  i_88 = i_21 + 1;
  ivtmp_69 = ivtmp_7 - 1;
  if (ivtmp_69 != 0)
    goto <bb 8>; [97.92%]
  else
    goto <bb 9>; [2.08%]

  <bb 8> [70.28%]:
  goto <bb 7>; [100.00%]

  <bb 9> [1.49%]:

  <bb 10> [2.04%]:
  __builtin_memset (&DRBG_ctx.Key, 0, 32);
  __builtin_memset (&DRBG_ctx.V, 0, 16);
  goto <bb 14>; [100.00%]

  <bb 11> [3.34%]:
  # _27 = PHI <&DRBG_ctx.V(29), &MEM[(void *)&DRBG_ctx + 47B](14), &MEM[(void *)&DRBG_ctx + 46B](15), &MEM[(void *)&DRBG_ctx + 45B](16), &MEM[(void *)&DRBG_ctx + 44B](17), &MEM[(void *)&DRBG_ctx + 43B](18), &MEM[(void *)&DRBG_ctx + 42B](19), &MEM[(void *)&DRBG_ctx + 41B](20), &MEM[(void *)&DRBG_ctx + 40B](21), &MEM[(void *)&DRBG_ctx + 39B](22), &MEM[(void *)&DRBG_ctx + 38B](23), &MEM[(void *)&DRBG_ctx + 37B](24), &MEM[(void *)&DRBG_ctx + 36B](25), &MEM[(void *)&DRBG_ctx + 35B](26), &MEM[(void *)&DRBG_ctx + 34B](27), &MEM[(void *)&DRBG_ctx + 33B](28)>
  # _164 = PHI <_161(29), prephitmp_123(14), _63(15), _70(16), _77(17), _84(18), _91(19), _98(20), _105(21), _112(22), _119(23), _126(24), _133(25), _140(26), _147(27), _154(28)>
  _26 = _164 + 1;
  *_27 = _26;

  <bb 12> [6.12%]:
  _29 = i_150 * 16;
  _30 = (sizetype) _29;
  _31 = &temp + _30;
  rijndaelKeySetupEnc (&round_key, &DRBG_ctx.Key, 256);
  rijndaelEncrypt (&round_key, 14, &DRBG_ctx.V, _31);
  round_key ={v} {CLOBBER};
  i_32 = i_150 + 1;
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 13>; [66.67%]
  else
    goto <bb 31>; [33.33%]

  <bb 13> [4.08%]:
  pretmp_116 = MEM[(unsigned char *)&DRBG_ctx + 47B];

  <bb 14> [6.12%]:
  # i_150 = PHI <i_32(13), 0(10)>
  # prephitmp_123 = PHI <pretmp_116(13), 0(10)>
  # ivtmp_160 = PHI <ivtmp_159(13), 3(10)>
  if (prephitmp_123 == 255)
    goto <bb 15>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 15> [5.68%]:
  MEM[(unsigned char *)&DRBG_ctx + 47B] = 0;
  _63 = MEM[(unsigned char *)&DRBG_ctx + 46B];
  if (_63 == 255)
    goto <bb 16>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 16> [5.30%]:
  MEM[(unsigned char *)&DRBG_ctx + 46B] = 0;
  _70 = MEM[(unsigned char *)&DRBG_ctx + 45B];
  if (_70 == 255)
    goto <bb 17>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 17> [4.92%]:
  MEM[(unsigned char *)&DRBG_ctx + 45B] = 0;
  _77 = MEM[(unsigned char *)&DRBG_ctx + 44B];
  if (_77 == 255)
    goto <bb 18>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 18> [4.59%]:
  MEM[(unsigned char *)&DRBG_ctx + 44B] = 0;
  _84 = MEM[(unsigned char *)&DRBG_ctx + 43B];
  if (_84 == 255)
    goto <bb 19>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 19> [4.26%]:
  MEM[(unsigned char *)&DRBG_ctx + 43B] = 0;
  _91 = MEM[(unsigned char *)&DRBG_ctx + 42B];
  if (_91 == 255)
    goto <bb 20>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 20> [3.97%]:
  MEM[(unsigned char *)&DRBG_ctx + 42B] = 0;
  _98 = MEM[(unsigned char *)&DRBG_ctx + 41B];
  if (_98 == 255)
    goto <bb 21>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 21> [3.69%]:
  MEM[(unsigned char *)&DRBG_ctx + 41B] = 0;
  _105 = MEM[(unsigned char *)&DRBG_ctx + 40B];
  if (_105 == 255)
    goto <bb 22>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 22> [3.41%]:
  MEM[(unsigned char *)&DRBG_ctx + 40B] = 0;
  _112 = MEM[(unsigned char *)&DRBG_ctx + 39B];
  if (_112 == 255)
    goto <bb 23>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 23> [3.17%]:
  MEM[(unsigned char *)&DRBG_ctx + 39B] = 0;
  _119 = MEM[(unsigned char *)&DRBG_ctx + 38B];
  if (_119 == 255)
    goto <bb 24>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 24> [2.93%]:
  MEM[(unsigned char *)&DRBG_ctx + 38B] = 0;
  _126 = MEM[(unsigned char *)&DRBG_ctx + 37B];
  if (_126 == 255)
    goto <bb 25>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 25> [2.74%]:
  MEM[(unsigned char *)&DRBG_ctx + 37B] = 0;
  _133 = MEM[(unsigned char *)&DRBG_ctx + 36B];
  if (_133 == 255)
    goto <bb 26>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 26> [2.56%]:
  MEM[(unsigned char *)&DRBG_ctx + 36B] = 0;
  _140 = MEM[(unsigned char *)&DRBG_ctx + 35B];
  if (_140 == 255)
    goto <bb 27>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 27> [2.37%]:
  MEM[(unsigned char *)&DRBG_ctx + 35B] = 0;
  _147 = MEM[(unsigned char *)&DRBG_ctx + 34B];
  if (_147 == 255)
    goto <bb 28>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 28> [2.22%]:
  MEM[(unsigned char *)&DRBG_ctx + 34B] = 0;
  _154 = MEM[(unsigned char *)&DRBG_ctx + 33B];
  if (_154 == 255)
    goto <bb 29>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 29> [2.06%]:
  MEM[(unsigned char *)&DRBG_ctx + 33B] = 0;
  _161 = MEM[(unsigned char *)&DRBG_ctx + 32B];
  if (_161 == 255)
    goto <bb 30>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 30> [1.89%]:
  MEM[(unsigned char *)&DRBG_ctx + 32B] = 0;
  goto <bb 12>; [100.00%]

  <bb 31> [2.04%]:

  <bb 32> [12.25%]:
  # i_149 = PHI <i_39(33), 0(31)>
  # ivtmp_8 = PHI <ivtmp_163(33), 48(31)>
  # vectp_temp.66_81 = PHI <vectp_temp.66_76(33), &temp(31)>
  # vectp_seed_material.69_55 = PHI <vectp_seed_material.69_51(33), &seed_material(31)>
  # vectp_temp.73_42 = PHI <vectp_temp.73_41(33), &temp(31)>
  # ivtmp_28 = PHI <ivtmp_24(33), 0(31)>
  vect__34.68_74 = MEM[(unsigned char[48] *)vectp_temp.66_81];
  _34 = temp[i_149];
  _35 = (sizetype) i_149;
  _36 = &seed_material + _35;
  vect__37.71_45 = MEM[(unsigned char *)vectp_seed_material.69_55];
  _37 = *_36;
  vect__38.72_44 = vect__34.68_74 ^ vect__37.71_45;
  _38 = _34 ^ _37;
  MEM[(unsigned char[48] *)vectp_temp.73_42] = vect__38.72_44;
  i_39 = i_149 + 1;
  ivtmp_163 = ivtmp_8 - 1;
  vectp_temp.66_76 = vectp_temp.66_81 + 32;
  vectp_seed_material.69_51 = vectp_seed_material.69_55 + 32;
  vectp_temp.73_41 = vectp_temp.73_42 + 32;
  ivtmp_24 = ivtmp_28 + 1;
  if (ivtmp_24 < 1)
    goto <bb 33>; [83.34%]
  else
    goto <bb 34>; [16.66%]

  <bb 33> [10.20%]:
  goto <bb 32>; [100.00%]

  <bb 34> [2.04%]:

  <bb 35> [97.96%]:
  # i_151 = PHI <32(34), i_111(36)>
  # ivtmp_144 = PHI <16(34), ivtmp_104(36)>
  _139 = temp[i_151];
  _137 = (sizetype) i_151;
  _132 = &seed_material + _137;
  _130 = *_132;
  _125 = _139 ^ _130;
  temp[i_151] = _125;
  i_111 = i_151 + 1;
  ivtmp_104 = ivtmp_144 - 1;
  if (ivtmp_104 != 0)
    goto <bb 36>; [97.92%]
  else
    goto <bb 37>; [2.08%]

  <bb 36> [95.92%]:
  goto <bb 35>; [100.00%]

  <bb 37> [2.04%]:
  MEM[(char * {ref-all})&DRBG_ctx] = MEM[(char * {ref-all})&temp];
  _14 = MEM[(char * {ref-all})&temp + 32B];
  MEM[(char * {ref-all})&DRBG_ctx + 32B] = _14;
  temp ={v} {CLOBBER};
  DRBG_ctx.reseed_counter = 1;
  seed_material ={v} {CLOBBER};
  return;

}



;; Function randombytes (randombytes, funcdef_no=47, decl_uid=2441, cgraph_uid=47, symbol_order=49)

randombytes (unsigned char * x, long long unsigned int xlen)
{
  uint32_t round_key[60];
  int j;
  int i;
  unsigned char block[16];
  unsigned char _4;
  int _9;
  int _10;
  __int128 unsigned _14;
  unsigned char _39;
  unsigned char _44;
  unsigned char _49;
  unsigned char _54;
  unsigned char _59;
  unsigned char _64;
  unsigned char _69;
  unsigned char _74;
  unsigned char _79;
  unsigned char _84;
  unsigned char _89;
  sizetype _93;
  unsigned char _94;
  unsigned char _99;
  unsigned char * _103;
  unsigned char _104;
  unsigned char _109;
  unsigned char * _112;
  unsigned char _114;
  unsigned char _117;

  <bb 2> [2.02%]:
  if (xlen_18(D) != 0)
    goto <bb 8>; [92.50%]
  else
    goto <bb 26>; [7.50%]

  <bb 3> [7.06%]:
  # j_17 = PHI <0(24), 15(9), 14(10), 13(11), 12(12), 11(13), 10(14), 9(15), 8(16), 7(17), 6(18), 5(19), 4(20), 3(21), 2(22), 1(23)>
  # _117 = PHI <_114(24), _39(9), _44(10), _49(11), _54(12), _59(13), _64(14), _69(15), _74(16), _79(17), _84(18), _89(19), _94(20), _99(21), _104(22), _109(23)>
  _4 = _117 + 1;
  DRBG_ctx.V[j_17] = _4;

  <bb 4> [12.94%]:
  rijndaelKeySetupEnc (&round_key, &DRBG_ctx.Key, 256);
  rijndaelEncrypt (&round_key, 14, &DRBG_ctx.V, &block);
  round_key ={v} {CLOBBER};
  _93 = (sizetype) i_31;
  _103 = x_28(D) + _93;
  if (xlen_32 > 15)
    goto <bb 5>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 5> [11.98%]:
  _14 = MEM[(char * {ref-all})&block];
  MEM[(char * {ref-all})_103] = _14;
  i_29 = i_31 + 16;
  xlen_30 = xlen_32 + 18446744073709551600;
  if (xlen_30 != 0)
    goto <bb 6>; [92.50%]
  else
    goto <bb 26>; [7.50%]

  <bb 6> [11.08%]:
  goto <bb 9>; [100.00%]

  <bb 7> [0.97%]:
  # xlen_116 = PHI <xlen_32(4)>
  # _112 = PHI <_103(4)>
  __builtin_memcpy (_112, &block, xlen_116);
  goto <bb 27>; [100.00%]

  <bb 8> [1.87%]:

  <bb 9> [12.90%]:
  # xlen_32 = PHI <xlen_30(6), xlen_18(D)(8)>
  # i_31 = PHI <i_29(6), 0(8)>
  _39 = DRBG_ctx.V[15];
  if (_39 == 255)
    goto <bb 10>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 10> [12.00%]:
  DRBG_ctx.V[15] = 0;
  _44 = DRBG_ctx.V[14];
  if (_44 == 255)
    goto <bb 11>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 11> [11.20%]:
  DRBG_ctx.V[14] = 0;
  _49 = DRBG_ctx.V[13];
  if (_49 == 255)
    goto <bb 12>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 12> [10.40%]:
  DRBG_ctx.V[13] = 0;
  _54 = DRBG_ctx.V[12];
  if (_54 == 255)
    goto <bb 13>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 13> [9.70%]:
  DRBG_ctx.V[12] = 0;
  _59 = DRBG_ctx.V[11];
  if (_59 == 255)
    goto <bb 14>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 14> [9.00%]:
  DRBG_ctx.V[11] = 0;
  _64 = DRBG_ctx.V[10];
  if (_64 == 255)
    goto <bb 15>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 15> [8.40%]:
  DRBG_ctx.V[10] = 0;
  _69 = DRBG_ctx.V[9];
  if (_69 == 255)
    goto <bb 16>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 16> [7.80%]:
  DRBG_ctx.V[9] = 0;
  _74 = DRBG_ctx.V[8];
  if (_74 == 255)
    goto <bb 17>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 17> [7.22%]:
  DRBG_ctx.V[8] = 0;
  _79 = DRBG_ctx.V[7];
  if (_79 == 255)
    goto <bb 18>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 18> [6.70%]:
  DRBG_ctx.V[7] = 0;
  _84 = DRBG_ctx.V[6];
  if (_84 == 255)
    goto <bb 19>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 19> [6.20%]:
  DRBG_ctx.V[6] = 0;
  _89 = DRBG_ctx.V[5];
  if (_89 == 255)
    goto <bb 20>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 20> [5.80%]:
  DRBG_ctx.V[5] = 0;
  _94 = DRBG_ctx.V[4];
  if (_94 == 255)
    goto <bb 21>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 21> [5.40%]:
  DRBG_ctx.V[4] = 0;
  _99 = DRBG_ctx.V[3];
  if (_99 == 255)
    goto <bb 22>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 22> [5.00%]:
  DRBG_ctx.V[3] = 0;
  _104 = DRBG_ctx.V[2];
  if (_104 == 255)
    goto <bb 23>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 23> [4.70%]:
  DRBG_ctx.V[2] = 0;
  _109 = DRBG_ctx.V[1];
  if (_109 == 255)
    goto <bb 24>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 24> [4.35%]:
  DRBG_ctx.V[1] = 0;
  _114 = DRBG_ctx.V[0];
  if (_114 == 255)
    goto <bb 25>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 25> [4.00%]:
  DRBG_ctx.V[0] = 0;
  goto <bb 4>; [100.00%]

  <bb 26> [1.05%]:

  <bb 27> [2.02%]:
  AES256_CTR_DRBG_Update.constprop (&DRBG_ctx.Key, &DRBG_ctx.V);
  _9 = DRBG_ctx.reseed_counter;
  _10 = _9 + 1;
  DRBG_ctx.reseed_counter = _10;
  block ={v} {CLOBBER};
  return 0;

}



;; Function AES256_CTR_DRBG_Update (AES256_CTR_DRBG_Update, funcdef_no=48, decl_uid=2425, cgraph_uid=48, symbol_order=50)

Removing basic block 43
Removing basic block 38
AES256_CTR_DRBG_Update (unsigned char * provided_data, unsigned char * Key, unsigned char * V)
{
  vector(32) unsigned char * vectp_temp.123;
  vector(32) unsigned char * vectp_temp.122;
  vector(32) unsigned char vect__14.121;
  vector(32) unsigned char vect__13.120;
  vector(32) unsigned char * vectp_provided_data.119;
  vector(32) unsigned char * vectp_provided_data.118;
  vector(32) unsigned char vect__10.117;
  vector(32) unsigned char * vectp_temp.116;
  vector(32) unsigned char * vectp_temp.115;
  unsigned int tmp.114;
  int tmp.113;
  uint32_t round_key[60];
  int i;
  int j;
  int i;
  unsigned char temp[48];
  unsigned char _6;
  int _7;
  sizetype _8;
  unsigned char * _9;
  unsigned char _10;
  sizetype _11;
  unsigned char * _12;
  unsigned char _13;
  unsigned char _14;
  __int128 unsigned _18;
  unsigned int ivtmp_22;
  unsigned int ivtmp_36;
  unsigned char _43;
  unsigned char * _49;
  unsigned char _50;
  unsigned char * _56;
  unsigned char _57;
  unsigned char * _63;
  unsigned char _64;
  unsigned char * _70;
  unsigned char _71;
  unsigned char * _77;
  unsigned char _78;
  unsigned char * _84;
  unsigned char _85;
  unsigned char * _91;
  unsigned char _92;
  unsigned char * _98;
  unsigned char _99;
  unsigned char * _105;
  unsigned char _106;
  unsigned char * _112;
  unsigned char _113;
  unsigned int ivtmp_116;
  unsigned char * _119;
  unsigned char _120;
  unsigned char _123;
  unsigned char _125;
  unsigned char * _126;
  unsigned char _127;
  unsigned char * _129;
  sizetype _130;
  unsigned char _132;
  unsigned char * _133;
  unsigned char _134;
  unsigned int ivtmp_136;
  unsigned char * _138;
  unsigned char * _140;
  unsigned char _141;
  unsigned int ivtmp_144;
  unsigned int ivtmp_145;
  unsigned int ivtmp_146;
  unsigned char _148;
  unsigned int ivtmp_150;
  unsigned char * _151;
  unsigned char _152;

  <bb 2> [2.78%]:
  _138 = V_28(D) + 15;
  goto <bb 6>; [100.00%]

  <bb 3> [4.56%]:
  # _151 = PHI <V_28(D)(35), _138(6), _49(8), _56(10), _63(12), _70(14), _77(16), _84(18), _91(20), _98(22), _105(24), _112(26), _119(28), _126(30), _133(32), _140(34)>
  # _152 = PHI <_148(35), _43(6), _50(8), _57(10), _64(12), _71(14), _78(16), _85(18), _92(20), _99(22), _106(24), _113(26), _120(28), _127(30), _134(32), _141(34)>
  _6 = _152 + 1;
  *_151 = _6;

  <bb 4> [8.36%]:
  _7 = i_109 * 16;
  _8 = (sizetype) _7;
  _9 = &temp + _8;
  rijndaelKeySetupEnc (&round_key, Key_27(D), 256);
  rijndaelEncrypt (&round_key, 14, V_28(D), _9);
  round_key ={v} {CLOBBER};
  i_34 = i_109 + 1;
  ivtmp_144 = ivtmp_146 - 1;
  if (ivtmp_144 != 0)
    goto <bb 5>; [66.69%]
  else
    goto <bb 37>; [33.31%]

  <bb 5> [5.58%]:

  <bb 6> [8.40%]:
  # i_109 = PHI <i_34(5), 0(2)>
  # ivtmp_146 = PHI <ivtmp_144(5), 3(2)>
  _43 = MEM[(unsigned char *)V_28(D) + 15B];
  if (_43 == 255)
    goto <bb 7>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 7> [7.77%]:
  MEM[(unsigned char *)V_28(D) + 15B] = 0;
  _50 = MEM[(unsigned char *)V_28(D) + 14B];
  if (_50 == 255)
    goto <bb 9>; [92.50%]
  else
    goto <bb 8>; [7.50%]

  <bb 8> [0.58%]:
  _49 = V_28(D) + 14;
  goto <bb 3>; [100.00%]

  <bb 9> [7.24%]:
  MEM[(unsigned char *)V_28(D) + 14B] = 0;
  _57 = MEM[(unsigned char *)V_28(D) + 13B];
  if (_57 == 255)
    goto <bb 11>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 10> [0.54%]:
  _56 = V_28(D) + 13;
  goto <bb 3>; [100.00%]

  <bb 11> [6.72%]:
  MEM[(unsigned char *)V_28(D) + 13B] = 0;
  _64 = MEM[(unsigned char *)V_28(D) + 12B];
  if (_64 == 255)
    goto <bb 13>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 12> [0.50%]:
  _63 = V_28(D) + 12;
  goto <bb 3>; [100.00%]

  <bb 13> [6.27%]:
  MEM[(unsigned char *)V_28(D) + 12B] = 0;
  _71 = MEM[(unsigned char *)V_28(D) + 11B];
  if (_71 == 255)
    goto <bb 15>; [92.50%]
  else
    goto <bb 14>; [7.50%]

  <bb 14> [0.47%]:
  _70 = V_28(D) + 11;
  goto <bb 3>; [100.00%]

  <bb 15> [5.81%]:
  MEM[(unsigned char *)V_28(D) + 11B] = 0;
  _78 = MEM[(unsigned char *)V_28(D) + 10B];
  if (_78 == 255)
    goto <bb 17>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 16> [0.44%]:
  _77 = V_28(D) + 10;
  goto <bb 3>; [100.00%]

  <bb 17> [5.43%]:
  MEM[(unsigned char *)V_28(D) + 10B] = 0;
  _85 = MEM[(unsigned char *)V_28(D) + 9B];
  if (_85 == 255)
    goto <bb 19>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 18> [0.41%]:
  _84 = V_28(D) + 9;
  goto <bb 3>; [100.00%]

  <bb 19> [5.04%]:
  MEM[(unsigned char *)V_28(D) + 9B] = 0;
  _92 = MEM[(unsigned char *)V_28(D) + 8B];
  if (_92 == 255)
    goto <bb 21>; [92.50%]
  else
    goto <bb 20>; [7.50%]

  <bb 20> [0.38%]:
  _91 = V_28(D) + 8;
  goto <bb 3>; [100.00%]

  <bb 21> [4.66%]:
  MEM[(unsigned char *)V_28(D) + 8B] = 0;
  _99 = MEM[(unsigned char *)V_28(D) + 7B];
  if (_99 == 255)
    goto <bb 23>; [92.50%]
  else
    goto <bb 22>; [7.50%]

  <bb 22> [0.35%]:
  _98 = V_28(D) + 7;
  goto <bb 3>; [100.00%]

  <bb 23> [4.33%]:
  MEM[(unsigned char *)V_28(D) + 7B] = 0;
  _106 = MEM[(unsigned char *)V_28(D) + 6B];
  if (_106 == 255)
    goto <bb 25>; [92.50%]
  else
    goto <bb 24>; [7.50%]

  <bb 24> [0.32%]:
  _105 = V_28(D) + 6;
  goto <bb 3>; [100.00%]

  <bb 25> [4.01%]:
  MEM[(unsigned char *)V_28(D) + 6B] = 0;
  _113 = MEM[(unsigned char *)V_28(D) + 5B];
  if (_113 == 255)
    goto <bb 27>; [92.50%]
  else
    goto <bb 26>; [7.50%]

  <bb 26> [0.30%]:
  _112 = V_28(D) + 5;
  goto <bb 3>; [100.00%]

  <bb 27> [3.75%]:
  MEM[(unsigned char *)V_28(D) + 5B] = 0;
  _120 = MEM[(unsigned char *)V_28(D) + 4B];
  if (_120 == 255)
    goto <bb 29>; [92.50%]
  else
    goto <bb 28>; [7.50%]

  <bb 28> [0.28%]:
  _119 = V_28(D) + 4;
  goto <bb 3>; [100.00%]

  <bb 29> [3.49%]:
  MEM[(unsigned char *)V_28(D) + 4B] = 0;
  _127 = MEM[(unsigned char *)V_28(D) + 3B];
  if (_127 == 255)
    goto <bb 31>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 30> [0.26%]:
  _126 = V_28(D) + 3;
  goto <bb 3>; [100.00%]

  <bb 31> [3.23%]:
  MEM[(unsigned char *)V_28(D) + 3B] = 0;
  _134 = MEM[(unsigned char *)V_28(D) + 2B];
  if (_134 == 255)
    goto <bb 33>; [92.50%]
  else
    goto <bb 32>; [7.50%]

  <bb 32> [0.24%]:
  _133 = V_28(D) + 2;
  goto <bb 3>; [100.00%]

  <bb 33> [3.04%]:
  MEM[(unsigned char *)V_28(D) + 2B] = 0;
  _141 = MEM[(unsigned char *)V_28(D) + 1B];
  if (_141 == 255)
    goto <bb 35>; [92.50%]
  else
    goto <bb 34>; [7.50%]

  <bb 34> [0.23%]:
  _140 = V_28(D) + 1;
  goto <bb 3>; [100.00%]

  <bb 35> [2.81%]:
  MEM[(unsigned char *)V_28(D) + 1B] = 0;
  _148 = *V_28(D);
  if (_148 == 255)
    goto <bb 36>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 36> [2.58%]:
  *V_28(D) = 0;
  goto <bb 4>; [100.00%]

  <bb 37> [2.78%]:
  if (provided_data_24(D) != 0B)
    goto <bb 38>; [73.26%]
  else
    goto <bb 45>; [26.74%]

  <bb 38> [2.04%]:

  <bb 39> [12.25%]:
  # i_108 = PHI <i_26(40), 0(38)>
  # ivtmp_22 = PHI <ivtmp_150(40), 48(38)>
  # vectp_temp.115_111 = PHI <vectp_temp.115_54(40), &temp(38)>
  # vectp_provided_data.118_32 = PHI <vectp_provided_data.118_21(40), provided_data_24(D)(38)>
  # vectp_temp.122_16 = PHI <vectp_temp.122_15(40), &temp(38)>
  # ivtmp_145 = PHI <ivtmp_36(40), 0(38)>
  vect__10.117_47 = MEM[(unsigned char[48] *)vectp_temp.115_111];
  _10 = temp[i_108];
  _11 = (sizetype) i_108;
  _12 = provided_data_24(D) + _11;
  vect__13.120_20 = MEM[(unsigned char *)vectp_provided_data.118_32];
  _13 = *_12;
  vect__14.121_17 = vect__10.117_47 ^ vect__13.120_20;
  _14 = _10 ^ _13;
  MEM[(unsigned char[48] *)vectp_temp.122_16] = vect__14.121_17;
  i_26 = i_108 + 1;
  ivtmp_150 = ivtmp_22 - 1;
  vectp_temp.115_54 = vectp_temp.115_111 + 32;
  vectp_provided_data.118_21 = vectp_provided_data.118_32 + 32;
  vectp_temp.122_15 = vectp_temp.122_16 + 32;
  ivtmp_36 = ivtmp_145 + 1;
  if (ivtmp_36 < 1)
    goto <bb 40>; [83.34%]
  else
    goto <bb 41>; [16.66%]

  <bb 40> [10.20%]:
  goto <bb 39>; [100.00%]

  <bb 41> [2.04%]:

  <bb 42> [97.96%]:
  # i_139 = PHI <32(41), i_118(43)>
  # ivtmp_136 = PHI <16(41), ivtmp_116(43)>
  _132 = temp[i_139];
  _130 = (sizetype) i_139;
  _129 = provided_data_24(D) + _130;
  _125 = *_129;
  _123 = _132 ^ _125;
  temp[i_139] = _123;
  i_118 = i_139 + 1;
  ivtmp_116 = ivtmp_136 - 1;
  if (ivtmp_116 != 0)
    goto <bb 43>; [97.92%]
  else
    goto <bb 44>; [2.08%]

  <bb 43> [95.92%]:
  goto <bb 42>; [100.00%]

  <bb 44> [2.04%]:

  <bb 45> [2.78%]:
  __builtin_memcpy (Key_27(D), &temp, 32);
  _18 = MEM[(char * {ref-all})&temp + 32B];
  MEM[(char * {ref-all})V_28(D)] = _18;
  temp ={v} {CLOBBER};
  return;

}



;; Function deterministic_random_byte_generator (deterministic_random_byte_generator, funcdef_no=49, decl_uid=2449, cgraph_uid=49, symbol_order=51)

Removing basic block 73
Removing basic block 23
deterministic_random_byte_generator (unsigned char * const output, const long long unsigned int output_len, const unsigned char * const seed, const long long unsigned int seed_length)
{
  vector(32) unsigned char * vectp_temp.143;
  vector(32) unsigned char * vectp_temp.142;
  vector(32) unsigned char vect__61.141;
  vector(32) unsigned char vect__60.140;
  vector(32) unsigned char * vectp_seed_material.139;
  vector(32) unsigned char * vectp_seed_material.138;
  vector(32) unsigned char vect__57.137;
  vector(32) unsigned char * vectp_temp.136;
  vector(32) unsigned char * vectp_temp.135;
  unsigned int tmp.134;
  int tmp.133;
  uint32_t round_key[60];
  unsigned char temp[48];
  int i;
  int j;
  uint32_t round_key[60];
  uint32_t round_key[60];
  int i;
  int j;
  int i;
  unsigned char temp[48];
  int j;
  int length_remaining;
  int i;
  unsigned char block[16];
  unsigned char seed_material[48];
  struct AES256_CTR_DRBG_struct ctx;
  unsigned char _3;
  long unsigned int _6;
  unsigned char _49;
  unsigned char * _50;
  int _52;
  sizetype _53;
  unsigned char * _54;
  unsigned char _57;
  sizetype _58;
  unsigned char * _59;
  unsigned char _60;
  unsigned char _61;
  unsigned char _71;
  unsigned char * _72;
  int _74;
  sizetype _75;
  unsigned char * _76;
  __int128 unsigned _78;
  unsigned char _84;
  unsigned char _86;
  __int128 unsigned _87;
  unsigned char _117;
  unsigned char _124;
  unsigned char _131;
  unsigned char _138;
  unsigned char _145;
  sizetype _149;
  unsigned char _152;
  unsigned char * _156;
  unsigned char _159;
  unsigned char _166;
  unsigned char _173;
  unsigned char _180;
  unsigned char _187;
  unsigned char _194;
  unsigned char pretmp_197;
  unsigned char prephitmp_199;
  unsigned char _201;
  unsigned char _208;
  unsigned char _213;
  unsigned char _218;
  unsigned char _223;
  unsigned char _228;
  unsigned char _233;
  unsigned char _238;
  unsigned char _243;
  unsigned char _248;
  unsigned char _253;
  unsigned char _258;
  unsigned char _263;
  unsigned char _268;
  unsigned int ivtmp_272;
  unsigned char _273;
  unsigned int ivtmp_277;
  unsigned char _278;
  unsigned char _283;
  unsigned char _288;
  unsigned char _302;
  unsigned char _309;
  unsigned char _316;
  unsigned int ivtmp_322;
  unsigned char _323;
  unsigned char _330;
  unsigned char _334;
  unsigned char _337;
  unsigned char _341;
  unsigned char * _343;
  unsigned char _344;
  sizetype _350;
  unsigned char _351;
  unsigned char _357;
  unsigned char _358;
  unsigned int ivtmp_362;
  unsigned char _365;
  unsigned char _372;
  unsigned int ivtmp_376;
  unsigned int ivtmp_378;
  unsigned char _379;
  unsigned int ivtmp_383;
  unsigned int ivtmp_385;
  unsigned char _386;
  unsigned int ivtmp_390;
  unsigned int ivtmp_392;
  unsigned char _393;
  unsigned char * _397;
  unsigned char _400;
  unsigned char _403;
  unsigned char _405;
  unsigned char _406;

  <bb 2> [2.02%]:
  MEM[(char * {ref-all})&seed_material] = MEM[(char * {ref-all})seed_16(D)];
  __builtin_memset (&ctx.Key, 0, 32);
  __builtin_memset (&ctx.V, 0, 16);
  goto <bb 6>; [100.00%]

  <bb 3> [3.31%]:
  # _50 = PHI <&ctx.V(21), &MEM[(void *)&ctx + 47B](6), &MEM[(void *)&ctx + 46B](7), &MEM[(void *)&ctx + 45B](8), &MEM[(void *)&ctx + 44B](9), &MEM[(void *)&ctx + 43B](10), &MEM[(void *)&ctx + 42B](11), &MEM[(void *)&ctx + 41B](12), &MEM[(void *)&ctx + 40B](13), &MEM[(void *)&ctx + 39B](14), &MEM[(void *)&ctx + 38B](15), &MEM[(void *)&ctx + 37B](16), &MEM[(void *)&ctx + 36B](17), &MEM[(void *)&ctx + 35B](18), &MEM[(void *)&ctx + 34B](19), &MEM[(void *)&ctx + 33B](20)>
  # _405 = PHI <_400(21), prephitmp_199(6), _302(7), _309(8), _316(9), _323(10), _330(11), _337(12), _344(13), _351(14), _358(15), _365(16), _372(17), _379(18), _386(19), _393(20)>
  _49 = _405 + 1;
  *_50 = _49;

  <bb 4> [6.06%]:
  _52 = i_176 * 16;
  _53 = (sizetype) _52;
  _54 = &temp + _53;
  rijndaelKeySetupEnc (&round_key, &ctx.Key, 256);
  rijndaelEncrypt (&round_key, 14, &ctx.V, _54);
  round_key ={v} {CLOBBER};
  i_55 = i_176 + 1;
  ivtmp_376 = ivtmp_378 - 1;
  if (ivtmp_376 != 0)
    goto <bb 5>; [66.67%]
  else
    goto <bb 23>; [33.33%]

  <bb 5> [4.04%]:
  pretmp_197 = MEM[(unsigned char *)&ctx + 47B];

  <bb 6> [6.06%]:
  # i_176 = PHI <i_55(5), 0(2)>
  # prephitmp_199 = PHI <pretmp_197(5), 0(2)>
  # ivtmp_378 = PHI <ivtmp_376(5), 3(2)>
  if (prephitmp_199 == 255)
    goto <bb 7>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 7> [5.62%]:
  MEM[(unsigned char *)&ctx + 47B] = 0;
  _302 = MEM[(unsigned char *)&ctx + 46B];
  if (_302 == 255)
    goto <bb 8>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 8> [5.25%]:
  MEM[(unsigned char *)&ctx + 46B] = 0;
  _309 = MEM[(unsigned char *)&ctx + 45B];
  if (_309 == 255)
    goto <bb 9>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 9> [4.87%]:
  MEM[(unsigned char *)&ctx + 45B] = 0;
  _316 = MEM[(unsigned char *)&ctx + 44B];
  if (_316 == 255)
    goto <bb 10>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 10> [4.54%]:
  MEM[(unsigned char *)&ctx + 44B] = 0;
  _323 = MEM[(unsigned char *)&ctx + 43B];
  if (_323 == 255)
    goto <bb 11>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 11> [4.22%]:
  MEM[(unsigned char *)&ctx + 43B] = 0;
  _330 = MEM[(unsigned char *)&ctx + 42B];
  if (_330 == 255)
    goto <bb 12>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 12> [3.94%]:
  MEM[(unsigned char *)&ctx + 42B] = 0;
  _337 = MEM[(unsigned char *)&ctx + 41B];
  if (_337 == 255)
    goto <bb 13>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 13> [3.65%]:
  MEM[(unsigned char *)&ctx + 41B] = 0;
  _344 = MEM[(unsigned char *)&ctx + 40B];
  if (_344 == 255)
    goto <bb 14>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 14> [3.38%]:
  MEM[(unsigned char *)&ctx + 40B] = 0;
  _351 = MEM[(unsigned char *)&ctx + 39B];
  if (_351 == 255)
    goto <bb 15>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 15> [3.14%]:
  MEM[(unsigned char *)&ctx + 39B] = 0;
  _358 = MEM[(unsigned char *)&ctx + 38B];
  if (_358 == 255)
    goto <bb 16>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 16> [2.90%]:
  MEM[(unsigned char *)&ctx + 38B] = 0;
  _365 = MEM[(unsigned char *)&ctx + 37B];
  if (_365 == 255)
    goto <bb 17>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 17> [2.72%]:
  MEM[(unsigned char *)&ctx + 37B] = 0;
  _372 = MEM[(unsigned char *)&ctx + 36B];
  if (_372 == 255)
    goto <bb 18>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 18> [2.53%]:
  MEM[(unsigned char *)&ctx + 36B] = 0;
  _379 = MEM[(unsigned char *)&ctx + 35B];
  if (_379 == 255)
    goto <bb 19>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 19> [2.34%]:
  MEM[(unsigned char *)&ctx + 35B] = 0;
  _386 = MEM[(unsigned char *)&ctx + 34B];
  if (_386 == 255)
    goto <bb 20>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 20> [2.20%]:
  MEM[(unsigned char *)&ctx + 34B] = 0;
  _393 = MEM[(unsigned char *)&ctx + 33B];
  if (_393 == 255)
    goto <bb 21>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 21> [2.04%]:
  MEM[(unsigned char *)&ctx + 33B] = 0;
  _400 = MEM[(unsigned char *)&ctx + 32B];
  if (_400 == 255)
    goto <bb 22>; [92.50%]
  else
    goto <bb 3>; [7.50%]

  <bb 22> [1.87%]:
  MEM[(unsigned char *)&ctx + 32B] = 0;
  goto <bb 4>; [100.00%]

  <bb 23> [2.02%]:

  <bb 24> [12.12%]:
  # i_175 = PHI <i_62(25), 0(23)>
  # ivtmp_385 = PHI <ivtmp_383(25), 48(23)>
  # vectp_temp.135_315 = PHI <vectp_temp.135_313(25), &temp(23)>
  # vectp_seed_material.138_306 = PHI <vectp_seed_material.138_301(25), &seed_material(23)>
  # vectp_temp.142_292 = PHI <vectp_temp.142_287(25), &temp(23)>
  # ivtmp_277 = PHI <ivtmp_272(25), 0(23)>
  vect__57.137_308 = MEM[(unsigned char[48] *)vectp_temp.135_315];
  _57 = temp[i_175];
  _58 = (sizetype) i_175;
  _59 = &seed_material + _58;
  vect__60.140_299 = MEM[(unsigned char *)vectp_seed_material.138_306];
  _60 = *_59;
  vect__61.141_294 = vect__57.137_308 ^ vect__60.140_299;
  _61 = _57 ^ _60;
  MEM[(unsigned char[48] *)vectp_temp.142_292] = vect__61.141_294;
  i_62 = i_175 + 1;
  ivtmp_383 = ivtmp_385 - 1;
  vectp_temp.135_313 = vectp_temp.135_315 + 32;
  vectp_seed_material.138_301 = vectp_seed_material.138_306 + 32;
  vectp_temp.142_287 = vectp_temp.142_292 + 32;
  ivtmp_272 = ivtmp_277 + 1;
  if (ivtmp_272 < 1)
    goto <bb 25>; [83.34%]
  else
    goto <bb 26>; [16.66%]

  <bb 25> [10.10%]:
  goto <bb 24>; [100.00%]

  <bb 26> [2.02%]:

  <bb 27> [96.98%]:
  # i_369 = PHI <32(26), i_327(28)>
  # ivtmp_362 = PHI <16(26), ivtmp_322(28)>
  _357 = temp[i_369];
  _350 = (sizetype) i_369;
  _343 = &seed_material + _350;
  _341 = *_343;
  _334 = _357 ^ _341;
  temp[i_369] = _334;
  i_327 = i_369 + 1;
  ivtmp_322 = ivtmp_362 - 1;
  if (ivtmp_322 != 0)
    goto <bb 28>; [97.92%]
  else
    goto <bb 29>; [2.08%]

  <bb 28> [94.96%]:
  goto <bb 27>; [100.00%]

  <bb 29> [2.02%]:
  MEM[(char * {ref-all})&ctx] = MEM[(char * {ref-all})&temp];
  _78 = MEM[(char * {ref-all})&temp + 32B];
  MEM[(char * {ref-all})&ctx + 32B] = _78;
  temp ={v} {CLOBBER};
  ctx.reseed_counter = 1;
  length_remaining_20 = (int) output_len_19(D);
  if (length_remaining_20 > 0)
    goto <bb 35>; [92.50%]
  else
    goto <bb 56>; [7.50%]

  <bb 30> [7.06%]:
  # j_2 = PHI <0(51), 15(36), 14(37), 13(38), 12(39), 11(40), 10(41), 9(42), 8(43), 7(44), 6(45), 5(46), 4(47), 3(48), 2(49), 1(50)>
  # _403 = PHI <_288(51), _213(36), _218(37), _223(38), _228(39), _233(40), _238(41), _243(42), _248(43), _253(44), _258(45), _263(46), _268(47), _273(48), _278(49), _283(50)>
  _3 = _403 + 1;
  ctx.V[j_2] = _3;

  <bb 31> [12.94%]:
  rijndaelKeySetupEnc (&round_key, &ctx.Key, 256);
  rijndaelEncrypt (&round_key, 14, &ctx.V, &block);
  round_key ={v} {CLOBBER};
  _149 = (sizetype) i_190;
  _156 = output_29(D) + _149;
  if (length_remaining_56 > 15)
    goto <bb 32>; [92.50%]
  else
    goto <bb 34>; [7.50%]

  <bb 32> [11.98%]:
  _87 = MEM[(char * {ref-all})&block];
  MEM[(char * {ref-all})_156] = _87;
  i_30 = i_190 + 16;
  length_remaining_31 = length_remaining_56 + -16;
  if (length_remaining_31 > 0)
    goto <bb 33>; [92.50%]
  else
    goto <bb 56>; [7.50%]

  <bb 33> [11.08%]:
  goto <bb 36>; [100.00%]

  <bb 34> [0.97%]:
  # length_remaining_399 = PHI <length_remaining_56(31)>
  # _397 = PHI <_156(31)>
  _6 = (long unsigned int) length_remaining_399;
  __builtin_memcpy (_397, &block, _6);
  goto <bb 57>; [100.00%]

  <bb 35> [1.87%]:

  <bb 36> [12.90%]:
  # i_190 = PHI <i_30(33), 0(35)>
  # length_remaining_56 = PHI <length_remaining_31(33), length_remaining_20(35)>
  _213 = ctx.V[15];
  if (_213 == 255)
    goto <bb 37>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 37> [12.00%]:
  ctx.V[15] = 0;
  _218 = ctx.V[14];
  if (_218 == 255)
    goto <bb 38>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 38> [11.20%]:
  ctx.V[14] = 0;
  _223 = ctx.V[13];
  if (_223 == 255)
    goto <bb 39>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 39> [10.40%]:
  ctx.V[13] = 0;
  _228 = ctx.V[12];
  if (_228 == 255)
    goto <bb 40>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 40> [9.70%]:
  ctx.V[12] = 0;
  _233 = ctx.V[11];
  if (_233 == 255)
    goto <bb 41>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 41> [9.00%]:
  ctx.V[11] = 0;
  _238 = ctx.V[10];
  if (_238 == 255)
    goto <bb 42>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 42> [8.40%]:
  ctx.V[10] = 0;
  _243 = ctx.V[9];
  if (_243 == 255)
    goto <bb 43>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 43> [7.80%]:
  ctx.V[9] = 0;
  _248 = ctx.V[8];
  if (_248 == 255)
    goto <bb 44>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 44> [7.22%]:
  ctx.V[8] = 0;
  _253 = ctx.V[7];
  if (_253 == 255)
    goto <bb 45>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 45> [6.70%]:
  ctx.V[7] = 0;
  _258 = ctx.V[6];
  if (_258 == 255)
    goto <bb 46>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 46> [6.20%]:
  ctx.V[6] = 0;
  _263 = ctx.V[5];
  if (_263 == 255)
    goto <bb 47>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 47> [5.80%]:
  ctx.V[5] = 0;
  _268 = ctx.V[4];
  if (_268 == 255)
    goto <bb 48>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 48> [5.40%]:
  ctx.V[4] = 0;
  _273 = ctx.V[3];
  if (_273 == 255)
    goto <bb 49>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 49> [5.00%]:
  ctx.V[3] = 0;
  _278 = ctx.V[2];
  if (_278 == 255)
    goto <bb 50>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 50> [4.70%]:
  ctx.V[2] = 0;
  _283 = ctx.V[1];
  if (_283 == 255)
    goto <bb 51>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 51> [4.35%]:
  ctx.V[1] = 0;
  _288 = ctx.V[0];
  if (_288 == 255)
    goto <bb 52>; [92.50%]
  else
    goto <bb 30>; [7.50%]

  <bb 52> [4.00%]:
  ctx.V[0] = 0;
  goto <bb 31>; [100.00%]

  <bb 53> [3.31%]:
  # _72 = PHI <&ctx.V(73), &MEM[(void *)&ctx + 47B](58), &MEM[(void *)&ctx + 46B](59), &MEM[(void *)&ctx + 45B](60), &MEM[(void *)&ctx + 44B](61), &MEM[(void *)&ctx + 43B](62), &MEM[(void *)&ctx + 42B](63), &MEM[(void *)&ctx + 41B](64), &MEM[(void *)&ctx + 40B](65), &MEM[(void *)&ctx + 39B](66), &MEM[(void *)&ctx + 38B](67), &MEM[(void *)&ctx + 37B](68), &MEM[(void *)&ctx + 36B](69), &MEM[(void *)&ctx + 35B](70), &MEM[(void *)&ctx + 34B](71), &MEM[(void *)&ctx + 33B](72)>
  # _406 = PHI <_208(73), _86(58), _84(59), _117(60), _124(61), _131(62), _138(63), _145(64), _152(65), _159(66), _166(67), _173(68), _180(69), _187(70), _194(71), _201(72)>
  _71 = _406 + 1;
  *_72 = _71;

  <bb 54> [6.06%]:
  _74 = i_171 * 16;
  _75 = (sizetype) _74;
  _76 = &temp + _75;
  rijndaelKeySetupEnc (&round_key, &ctx.Key, 256);
  rijndaelEncrypt (&round_key, 14, &ctx.V, _76);
  round_key ={v} {CLOBBER};
  i_77 = i_171 + 1;
  ivtmp_390 = ivtmp_392 - 1;
  if (ivtmp_390 != 0)
    goto <bb 55>; [66.67%]
  else
    goto <bb 75>; [33.33%]

  <bb 55> [4.04%]:
  goto <bb 58>; [100.00%]

  <bb 56> [1.05%]:

  <bb 57> [2.02%]:

  <bb 58> [6.06%]:
  # i_171 = PHI <0(57), i_77(55)>
  # ivtmp_392 = PHI <3(57), ivtmp_390(55)>
  _86 = MEM[(unsigned char *)&ctx + 47B];
  if (_86 == 255)
    goto <bb 59>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 59> [5.62%]:
  MEM[(unsigned char *)&ctx + 47B] = 0;
  _84 = MEM[(unsigned char *)&ctx + 46B];
  if (_84 == 255)
    goto <bb 60>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 60> [5.25%]:
  MEM[(unsigned char *)&ctx + 46B] = 0;
  _117 = MEM[(unsigned char *)&ctx + 45B];
  if (_117 == 255)
    goto <bb 61>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 61> [4.87%]:
  MEM[(unsigned char *)&ctx + 45B] = 0;
  _124 = MEM[(unsigned char *)&ctx + 44B];
  if (_124 == 255)
    goto <bb 62>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 62> [4.54%]:
  MEM[(unsigned char *)&ctx + 44B] = 0;
  _131 = MEM[(unsigned char *)&ctx + 43B];
  if (_131 == 255)
    goto <bb 63>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 63> [4.22%]:
  MEM[(unsigned char *)&ctx + 43B] = 0;
  _138 = MEM[(unsigned char *)&ctx + 42B];
  if (_138 == 255)
    goto <bb 64>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 64> [3.94%]:
  MEM[(unsigned char *)&ctx + 42B] = 0;
  _145 = MEM[(unsigned char *)&ctx + 41B];
  if (_145 == 255)
    goto <bb 65>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 65> [3.65%]:
  MEM[(unsigned char *)&ctx + 41B] = 0;
  _152 = MEM[(unsigned char *)&ctx + 40B];
  if (_152 == 255)
    goto <bb 66>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 66> [3.38%]:
  MEM[(unsigned char *)&ctx + 40B] = 0;
  _159 = MEM[(unsigned char *)&ctx + 39B];
  if (_159 == 255)
    goto <bb 67>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 67> [3.14%]:
  MEM[(unsigned char *)&ctx + 39B] = 0;
  _166 = MEM[(unsigned char *)&ctx + 38B];
  if (_166 == 255)
    goto <bb 68>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 68> [2.90%]:
  MEM[(unsigned char *)&ctx + 38B] = 0;
  _173 = MEM[(unsigned char *)&ctx + 37B];
  if (_173 == 255)
    goto <bb 69>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 69> [2.72%]:
  MEM[(unsigned char *)&ctx + 37B] = 0;
  _180 = MEM[(unsigned char *)&ctx + 36B];
  if (_180 == 255)
    goto <bb 70>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 70> [2.53%]:
  MEM[(unsigned char *)&ctx + 36B] = 0;
  _187 = MEM[(unsigned char *)&ctx + 35B];
  if (_187 == 255)
    goto <bb 71>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 71> [2.34%]:
  MEM[(unsigned char *)&ctx + 35B] = 0;
  _194 = MEM[(unsigned char *)&ctx + 34B];
  if (_194 == 255)
    goto <bb 72>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 72> [2.20%]:
  MEM[(unsigned char *)&ctx + 34B] = 0;
  _201 = MEM[(unsigned char *)&ctx + 33B];
  if (_201 == 255)
    goto <bb 73>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 73> [2.04%]:
  MEM[(unsigned char *)&ctx + 33B] = 0;
  _208 = MEM[(unsigned char *)&ctx + 32B];
  if (_208 == 255)
    goto <bb 74>; [92.50%]
  else
    goto <bb 53>; [7.50%]

  <bb 74> [1.87%]:
  MEM[(unsigned char *)&ctx + 32B] = 0;
  goto <bb 54>; [100.00%]

  <bb 75> [2.02%]:
  temp ={v} {CLOBBER};
  ctx ={v} {CLOBBER};
  seed_material ={v} {CLOBBER};
  block ={v} {CLOBBER};
  return;

}


