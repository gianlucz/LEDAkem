0000000000400afe <gf2x_mul_comb>:
  400afe:	55                   	push   %rbp
  400aff:	48 89 e5             	mov    %rsp,%rbp
  400b02:	48 83 ec 50          	sub    $0x50,%rsp
  400b06:	89 7d dc             	mov    %edi,-0x24(%rbp)
  400b09:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  400b0d:	89 55 d8             	mov    %edx,-0x28(%rbp)
  400b10:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
  400b14:	44 89 45 c4          	mov    %r8d,-0x3c(%rbp)
  400b18:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
  400b1c:	8b 45 dc             	mov    -0x24(%rbp),%eax
  400b1f:	48 98                	cltq
  400b21:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400b28:	00
  400b29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400b2d:	be 00 00 00 00       	mov    $0x0,%esi
  400b32:	48 89 c7             	mov    %rax,%rdi
  400b35:	e8 b6 fb ff ff       	callq  4006f0 <memset@plt>
  400b3a:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%rbp) #carica k
  400b41:	e9 76 01 00 00       	jmpq   400cbc <gf2x_mul_comb+0x1be> #primo for (salta dove fa il check k>0, se è vero torna qua)
  400b46:	8b 45 d8             	mov    -0x28(%rbp),%eax
  400b49:	83 e8 01             	sub    $0x1,%eax
  400b4c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  400b4f:	e9 9d 00 00 00       	jmpq   400bf1 <gf2x_mul_comb+0xf3> #secondo for (salta dove fa il check i>0, se è vero torna qua)
  400b54:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400b57:	48 98                	cltq
  400b59:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400b60:	00
  400b61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400b65:	48 01 d0             	add    %rdx,%rax
  400b68:	48 8b 10             	mov    (%rax),%rdx
  400b6b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400b6e:	89 c1                	mov    %eax,%ecx
  400b70:	48 d3 ea             	shr    %cl,%rdx
  400b73:	48 89 d0             	mov    %rdx,%rax
  400b76:	83 e0 01             	and    $0x1,%eax
  400b79:	48 85 c0             	test   %rax,%rax  #test if
  400b7c:	74 6f                	je     400bed <gf2x_mul_comb+0xef>   # se uguale salta alla fine del for per un nuovo ciclo
  400b7e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  400b81:	83 e8 01             	sub    $0x1,%eax
  400b84:	89 45 e8             	mov    %eax,-0x18(%rbp)
  400b87:	eb 5e                	jmp    400be7 <gf2x_mul_comb+0xe9> #altro for dentro if
  400b89:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  400b8c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400b8f:	01 d0                	add    %edx,%eax
  400b91:	48 98                	cltq
  400b93:	48 83 c0 01          	add    $0x1,%rax
  400b97:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400b9e:	00
  400b9f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400ba3:	48 01 d0             	add    %rdx,%rax
  400ba6:	48 8b 08             	mov    (%rax),%rcx
  400ba9:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400bac:	48 98                	cltq
  400bae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400bb5:	00
  400bb6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  400bba:	48 01 d0             	add    %rdx,%rax
  400bbd:	48 8b 10             	mov    (%rax),%rdx
  400bc0:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  400bc3:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400bc6:	01 f0                	add    %esi,%eax
  400bc8:	48 98                	cltq
  400bca:	48 83 c0 01          	add    $0x1,%rax
  400bce:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
  400bd5:	00
  400bd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400bda:	48 01 f0             	add    %rsi,%rax
  400bdd:	48 31 ca             	xor    %rcx,%rdx
  400be0:	48 89 10             	mov    %rdx,(%rax)
  400be3:	83 6d e8 01          	subl   $0x1,-0x18(%rbp)
  400be7:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  400beb:	79 9c                	jns    400b89 <gf2x_mul_comb+0x8b>
  400bed:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  400bf1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  400bf5:	0f 89 59 ff ff ff    	jns    400b54 <gf2x_mul_comb+0x56>
  400bfb:	8b 55 d8             	mov    -0x28(%rbp),%edx
  400bfe:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  400c01:	01 d0                	add    %edx,%eax
  400c03:	48 98                	cltq
  400c05:	48 c1 e0 03          	shl    $0x3,%rax
  400c09:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  400c0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c11:	48 01 d0             	add    %rdx,%rax
  400c14:	48 8b 00             	mov    (%rax),%rax
  400c17:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400c1b:	8b 55 d8             	mov    -0x28(%rbp),%edx
  400c1e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  400c21:	01 d0                	add    %edx,%eax
  400c23:	48 98                	cltq
  400c25:	48 c1 e0 03          	shl    $0x3,%rax
  400c29:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  400c2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c31:	48 01 d0             	add    %rdx,%rax
  400c34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  400c38:	48 01 d2             	add    %rdx,%rdx
  400c3b:	48 89 10             	mov    %rdx,(%rax)
  400c3e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
  400c45:	eb 64                	jmp    400cab <gf2x_mul_comb+0x1ad>
  400c47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400c4b:	48 c1 e8 3f          	shr    $0x3f,%rax
  400c4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400c53:	8b 55 d8             	mov    -0x28(%rbp),%edx
  400c56:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  400c59:	01 d0                	add    %edx,%eax
  400c5b:	83 e8 01             	sub    $0x1,%eax
  400c5e:	2b 45 e8             	sub    -0x18(%rbp),%eax
  400c61:	48 98                	cltq
  400c63:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400c6a:	00
  400c6b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c6f:	48 01 d0             	add    %rdx,%rax
  400c72:	48 8b 00             	mov    (%rax),%rax
  400c75:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400c79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400c7d:	48 01 c0             	add    %rax,%rax
  400c80:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  400c83:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  400c86:	01 ca                	add    %ecx,%edx
  400c88:	83 ea 01             	sub    $0x1,%edx
  400c8b:	2b 55 e8             	sub    -0x18(%rbp),%edx
  400c8e:	48 63 d2             	movslq %edx,%rdx
  400c91:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
  400c98:	00
  400c99:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  400c9d:	48 01 ca             	add    %rcx,%rdx
  400ca0:	48 33 45 f8          	xor    -0x8(%rbp),%rax
  400ca4:	48 89 02             	mov    %rax,(%rdx)
  400ca7:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  400cab:	8b 55 d8             	mov    -0x28(%rbp),%edx
  400cae:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  400cb1:	01 d0                	add    %edx,%eax
  400cb3:	39 45 e8             	cmp    %eax,-0x18(%rbp)
  400cb6:	7c 8f                	jl     400c47 <gf2x_mul_comb+0x149>
  400cb8:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  400cbc:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  400cc0:	0f 8f 80 fe ff ff    	jg     400b46 <gf2x_mul_comb+0x48>
  400cc6:	8b 45 d8             	mov    -0x28(%rbp),%eax
  400cc9:	83 e8 01             	sub    $0x1,%eax
  400ccc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  400ccf:	e9 92 00 00 00       	jmpq   400d66 <gf2x_mul_comb+0x268>
  400cd4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  400cd7:	48 98                	cltq
  400cd9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400ce0:	00
  400ce1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400ce5:	48 01 d0             	add    %rdx,%rax
  400ce8:	48 8b 00             	mov    (%rax),%rax
  400ceb:	83 e0 01             	and    $0x1,%eax
  400cee:	48 85 c0             	test   %rax,%rax
  400cf1:	74 6f                	je     400d62 <gf2x_mul_comb+0x264>
  400cf3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  400cf6:	83 e8 01             	sub    $0x1,%eax
  400cf9:	89 45 e8             	mov    %eax,-0x18(%rbp)
  400cfc:	eb 5e                	jmp    400d5c <gf2x_mul_comb+0x25e>
  400cfe:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  400d01:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400d04:	01 d0                	add    %edx,%eax
  400d06:	48 98                	cltq
  400d08:	48 83 c0 01          	add    $0x1,%rax
  400d0c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400d13:	00
  400d14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400d18:	48 01 d0             	add    %rdx,%rax
  400d1b:	48 8b 08             	mov    (%rax),%rcx
  400d1e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400d21:	48 98                	cltq
  400d23:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  400d2a:	00
  400d2b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  400d2f:	48 01 d0             	add    %rdx,%rax
  400d32:	48 8b 10             	mov    (%rax),%rdx
  400d35:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  400d38:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400d3b:	01 f0                	add    %esi,%eax
  400d3d:	48 98                	cltq
  400d3f:	48 83 c0 01          	add    $0x1,%rax
  400d43:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
  400d4a:	00
  400d4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400d4f:	48 01 f0             	add    %rsi,%rax
  400d52:	48 31 ca             	xor    %rcx,%rdx
  400d55:	48 89 10             	mov    %rdx,(%rax)
  400d58:	83 6d e8 01          	subl   $0x1,-0x18(%rbp)
  400d5c:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  400d60:	79 9c                	jns    400cfe <gf2x_mul_comb+0x200>
  400d62:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  400d66:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  400d6a:	0f 89 64 ff ff ff    	jns    400cd4 <gf2x_mul_comb+0x1d6>
  400d70:	90                   	nop
  400d71:	c9                   	leaveq
  400d72:	c3                   	retq
